<#@ template debug="true" hostspecific="true" language="C#" #>
<#@ assembly name="System.Core" #>
<#@ assembly name="System.Xml" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ output extension=".cs" #>

namespace TMT.Enforcement.iLog.Persistence.OracleTableTypeClasses
{
	<# 
		//Lets edit the xml document to include the relevant data items
	    var xmlString  = "<root>"+
							  "<Table name=\"GlobalProperties\">"+
								"<column name=\"ClassName\">CameraStatistics</column>"+
								"<column name=\"OracleType\">REPORTING.CAMERA_STATISTICS_TYPE</column>"+
								"<column name=\"OracleTableType\">REPORTING.TABLE_CAMERA_STATISTICS_TYPE</column>"+
							  "</Table>"+
							    "<Table name=\"PropertyList\">"+					
								"<column name=\"STATS_FILE_NAME\" type=\"string\"/>"+
								"<column name=\"MACHINE_ID\" type=\"string\"/>"+
								"<column name=\"LOCATION_CODE\" type=\"string\"/>"+
								"<column name=\"RUN_DATE\" type=\"string\"/>"+
								"<column name=\"TIME\" type=\"string\"/>"+
								"<column name=\"SPEED\" type=\"long?\"/>"+
								"<column name=\"ZONE\" type=\"long?\"/>"+
								"<column name=\"LANE\" type=\"long?\"/>"+
								"<column name=\"TYPE\" type=\"string\"/>"+
								"<column name=\"DISTANCE\" type=\"long?\"/>"+
								"<column name=\"DIRECTION\" type=\"string\"/>"+
								"<column name=\"CLASSIFICATION\" type=\"string\"/>"+
								"<column name=\"CAPTURED\" type=\"string\"/>"+
								"<column name=\"ENC_FILE_NAME\" type=\"string\"/>"+
								"<column name=\"ERROR_MESSAGE\" type=\"string\"/>"+
								"<column name=\"SMD_STRING\" type=\"string\"/>"+
								"<column name=\"PLATES\" type=\"string\"/>"+								
							  "</Table>"+
							"</root>";
		var doc = new System.Xml.XmlDocument();
		doc.LoadXml(xmlString);
		var ClassName = doc.SelectNodes("//Table[@name='GlobalProperties']/column[@name='ClassName']")[0].InnerText;
        var OracleType = doc.SelectNodes("//Table[@name='GlobalProperties']/column[@name='OracleType']")[0].InnerText;
        var OracleTableType = doc.SelectNodes("//Table[@name='GlobalProperties']/column[@name='OracleTableType']")[0].InnerText;
		var propertyNodes = doc.SelectNodes("//Table[@name='PropertyList']/column");
	 #>
    
	//using Oracle.DataAccess.Client;
    using Oracle.DataAccess.Types;
    using System;

    public class <#=  ClassName#> : Oracle.DataAccess.Types.INullable, Oracle.DataAccess.Types.IOracleCustomType
    {   
  
        private readonly bool isNull = false;

		bool INullable.IsNull
        {
            get
            {
                return this.isNull;
            }
        }

		<# 
			foreach (System.Xml.XmlNode node in propertyNodes)
            {
		 #>
		 
		
        [Oracle.DataAccess.Types.OracleObjectMappingAttribute("<#= node.Attributes["name"].Value #>")]
        public <#= node.Attributes["type"].Value #> <#= node.Attributes["name"].Value #> {get;set;}
        
		<# }
		  #>
          public void FromCustomObject(Oracle.DataAccess.Client.OracleConnection con, System.IntPtr pUdt)
        {
		<# 
			foreach (System.Xml.XmlNode node in propertyNodes)
            {
		 #>
            OracleUdt.SetValue(con, pUdt, "<#= node.Attributes["name"].Value #>", <#= node.Attributes["name"].Value #>);
		 <# }
		  #>
		  }
     
	 public void ToCustomObject(Oracle.DataAccess.Client.OracleConnection con, System.IntPtr pUdt)
        {
		<# 
			foreach (System.Xml.XmlNode node in propertyNodes)
            {
		 #>
			<#= node.Attributes["name"].Value #> = (<#= node.Attributes["type"].Value #>)OracleUdt.GetValue(con, pUdt, "<#= node.Attributes["name"].Value #>");
		 <# }
		  #>
		  }
    }

    [Oracle.DataAccess.Types.OracleCustomTypeMappingAttribute("<#=  OracleType#>")]
    public class <#=  ClassName#>Factory : Oracle.DataAccess.Types.IOracleCustomTypeFactory
    {

        public virtual Oracle.DataAccess.Types.IOracleCustomType CreateObject()
        {
            return new <#=  ClassName#>();
        }
    }

    [Oracle.DataAccess.Types.OracleCustomTypeMappingAttribute("<#=  OracleTableType#>")]
    public class <#=  ClassName#>ArrayFactory : Oracle.DataAccess.Types.IOracleArrayTypeFactory
    {

        public System.Array CreateArray(int numElems)
        {
            return new <#=  ClassName#>[numElems];
        }

        public System.Array CreateStatusArray(int numElems)
        {
            return null;
        }
    }
}