@model Kapsch.Core.Gateway.Models.User.ChangePasswordModel
@{
    var user = User as Kapsch.ITS.Portal.Models.AuthenticatedUser;
}

@using (Html.BeginForm("ChangePassword", "Account", FormMethod.Post, new { id = "changePasswordForm" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">

        @Html.ValidationSummary(true)
        @Html.Hidden("UserName", user.Identity.Name)

        <div class="form-group">
            @Html.LabelFor(model => model.CurrentPassword, new { @class = "control-label col-md-4" })
            <div class="col-md-8">
                @Html.TextBoxFor(model => model.CurrentPassword, new { type = "password", @class = "form-control" })
                @Html.ValidationMessageFor(model => model.CurrentPassword, null, new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.NewPassword, new { @class = "control-label col-md-4" })
            <div class="col-md-8">
                @Html.TextBoxFor(model => model.NewPassword, new { type = "password", @class = "form-control" })
                @Html.ValidationMessageFor(model => model.NewPassword, null, new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.ConfirmNewPassword, new { @class = "control-label col-md-4" })
            <div class="col-md-8">
                @Html.TextBoxFor(model => model.ConfirmNewPassword, new { type = "password", @class = "form-control" })
                @Html.ValidationMessageFor(model => model.ConfirmNewPassword, null, new { @class = "text-danger" })
            </div>
        </div>
    </div>
    <div class="modal-footer">
        <button type="button" class="btn btn-white" data-dismiss="modal">Close</button>
        <input type="submit" value="Save Changes" class="btn btn-primary" />
    </div>
}

